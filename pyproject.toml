[build-system]
requires = [ "poetry-core>=1.0.0",]
build-backend = "poetry.core.masonry.api"

[tool.poetry]
name = "hooks"
version = "0.3.5"
description = "Custom pre-commit hooks for use within our projects"
authors = [ "Tom Collingwood <tom.collingwood@stfc.ac.uk>","Rob Firth <rob.firth@stfc.ac.uk>"]
license = "MIT"
repository = "https://github.com/stfc/pre-commit-hooks"
keywords = [ "pre-commit", "hooks",]

[tool.mypy]
warn_return_any = true
warn_unused_configs = true
warn_redundant_casts = true
[[tool.mypy.overrides]]
module = [ "regex", "pylint", "requirements", "toml",]
ignore_missing_imports = true

[tool.isort]
profile = "black"
skip = [ "build_seq.py", "conf.py",]
float_to_top = true

[tool.tox]
legacy_tox_ini = "[tox]\nskipsdist = true\nenvlist = py39\n\n[testenv]\nwhitelist_externals = poetry\npassenv = RUNNER PLATFORM_ENVVAR\ncommands =\n    poetry install -v\n    poetry run python -m unittest\n"

[tool.poetry.scripts]
check-missing-requirements = "hooks.check_missing_requirements:main"
check-mypy-import-errors = "hooks.check_mypy_import_errors:main"
check-pylint-import-errors = "hooks.check_pylint_import_errors:main"

[tool.poetry.dependencies]
# mandatory dependencies
python = ">=3.7.2, <4.0"
regex = "^2022.1.18"
requirements-parser = "^0.2.0"
toml = "^0.10.2"

# optional - see extras section
Sphinx = "^4.2.0"
sphinx-rtd-theme = "^1.0.0"
jupyterlab-code-formatter = "^1.4.10"
mypy = "^1.1.1"
mypy-extensions = "^1.0.0"
ruff = "^0.2.1"

[tool.poetry.dev-dependencies]
black = "^22.3.0"
isort = "^5.10.1"
pre-commit = "^2.15.0"
tox = "^3.24.4"

[tool.poetry.extras]
docs = ["Sphinx", "sphinx-rtd-theme"]

[tool.ruff]
line-length = 88
extend-include = ["*.ipynb"]
# Note: Ruff supports a top-level `src` option in lieu of isort's `src_paths` setting.
src = ["raghack", "tests"]

[tool.ruff.lint]
select = [
    # Pyflakes
    "F",
    # Pycodestyle
    "E",
    "W",
    # isort
    "I001"
]
