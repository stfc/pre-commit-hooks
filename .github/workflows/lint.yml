name: lint

on: push

env:
  POETRY_VERSION: "1.8.2"
  PYTHON_VERSION: "3.9"

jobs:
  lint:
    name: Run linting tools
    runs-on: "ubuntu-latest"
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Print PYTHON_VERSION
        run: echo "Using python==$PYTHON_VERSION"

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{env.PYTHON_VERSION}}


      - name: Permacache Poetry
        id: cache-poetry
        uses: actions/cache@v3
        with:
          path: ~/.poetry
          key: poetry

      - name: Install latest version of Poetry
        if: steps.cache-poetry.outputs.cache-hit != 'true'
        run: |
          POETRY_VERSION=$POETRY_VERSION curl -sSL https://install.python-poetry.org | python3 -
          poetry version

      - name: Add Poetry to $PATH
        run: |
          echo "$HOME/.poetry/bin" >> $GITHUB_PATH

      - name: Get Poetry version
        run: poetry --version

      - name: Check pyproject.toml validity
        run: poetry check --no-interaction

      - name: Cache dependencies
        id: cache-deps
        uses: actions/cache@v3
        with:
          path: ${{github.workspace}}/.venv
          key: poetry-${{ hashFiles('**/poetry.lock') }}
          restore-keys: poetry-

      - name: Install deps
        if: steps.cache-deps.cache-hit != 'true'
        run: |
          poetry config virtualenvs.in-project true
          poetry install --no-interaction

      - name: Lint code
        run: |
          poetry run isort --check hooks
          poetry run black --check --diff .
          poetry run ruff check hooks
          poetry run mypy hooks
